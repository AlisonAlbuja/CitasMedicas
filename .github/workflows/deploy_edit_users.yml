name: Docker Image CI/CD for EditUsers Service

on:
  push:
    branches:
      - Folder-Organization
    paths:
      - 'BACKEND/UserManagement/EditUsers/**'
  pull_request:
    branches: ['Folder-Organization']
    paths:
      - 'BACKEND/UserManagement/EditUsers/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/edit_users:latest \
          --file BACKEND/UserManagement/EditUsers/Dockerfile \
          BACKEND/UserManagement/EditUsers/ \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }}
        docker push ${{ secrets.DOCKER_USERNAME }}/edit_users:latest

  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Set permissions for private key
      run: |
        echo "${{ secrets.EC2_SSH_KEY2 }}" > key.pem
        chmod 600 key.pem

    - name: Deploy Docker Container on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_HOST_EDIT_USERS }}<< 'EOF'
        # Update system
        sudo yum update -y

        # Install Docker if not present
        if ! command -v docker &> /dev/null; then
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
        fi

        # Ensure Docker is running
        sudo systemctl start docker
        sudo systemctl enable docker

        # Stop and remove the existing container
        sudo docker stop edit_users || true
        sudo docker rm edit_users || true

        # Pull latest image
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/edit_users:latest

        # Run new container
        sudo docker run -d \
          --name edit_users \
          -p 8080:8080 \
          -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
          ${{ secrets.DOCKER_USERNAME }}/edit_users:latest

        # Remove unused images
        sudo docker image prune -f
        EOF
