name: Docker Image CI/CD for Login Service

on:
  push:
    branches:
      - Folder-Organization  # ‚úÖ Se ejecuta solo en esta rama
    paths:
      - 'BACKEND/auth/login/**'
  pull_request:
    branches:
      - Folder-Organization  # ‚úÖ Se ejecuta en PRs hacia esta rama
      - test
      - main
    paths:
      - 'BACKEND/auth/login/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # üì• Clonar el c√≥digo del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # üîë Login en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # üê≥ Construcci√≥n de la imagen Docker
    - name: Build Docker image
      run: |
        docker build $GITHUB_WORKSPACE/BACKEND/auth/login/. \
          --file $GITHUB_WORKSPACE/BACKEND/auth/login/Dockerfile \
          -t ${{ secrets.DOCKER_USERNAME }}/login:latest

    # üì§ Subir la imagen a Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/login:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # üì° Conectar al servidor EC2 usando SSH
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_LOGIN }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "üîÑ Verificando Docker..."
          if ! command -v docker &> /dev/null; then
            echo "üîß Instalando y activando Docker..."
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu
            newgrp docker
          fi

          echo "üõë Deteniendo y eliminando contenedor previo..."
          if sudo docker ps -a --format '{{.Names}}' | grep -q "^login$"; then
            sudo docker stop login && sudo docker rm login
          fi

          echo "‚¨á Descargando la √∫ltima imagen desde Docker Hub..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/login:latest
          
          echo "üöÄ Ejecutando el nuevo contenedor en el puerto ${{ secrets.SERVER_PORT_LOGIN }}..."
          sudo docker run -d \
            --name login \
            --restart unless-stopped \
            -p ${{ secrets.SERVER_PORT_LOGIN }}:${{ secrets.SERVER_PORT_LOGIN }} \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DOCTOR_DB_HOST=${{ secrets.DOCTOR_DB_HOST }} \
            -e DOCTOR_DB_PORT=${{ secrets.DOCTOR_DB_PORT }} \
            -e DOCTOR_DB_USER=${{ secrets.DOCTOR_DB_USER }} \
            -e DOCTOR_DB_PASSWORD=${{ secrets.DOCTOR_DB_PASSWORD }} \
            -e DOCTOR_DB_NAME=${{ secrets.DOCTOR_DB_NAME }} \
            -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
            -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
            -e SERVER_PORT=${{ secrets.SERVER_PORT_LOGIN }} \
            ${{ secrets.DOCKER_USERNAME }}/login:latest

          echo "üîç Verificando si el contenedor est√° corriendo..."
          if sudo docker ps -f name=login | grep login; then
            echo "‚úÖ Contenedor 'login' corriendo correctamente."
          else
            echo "‚ùå Error al iniciar el contenedor. Revisa los logs."
            exit 1
          fi
