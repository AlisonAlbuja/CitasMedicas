{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Programaci\\xF3n_Distribuida\\\\MedicalAppointments\\\\FRONTEND\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { registerUser } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      await registerUser(formData); // Usa la función específica\n      alert(\"Usuario registrado exitosamente.\");\n    } catch (error) {\n      alert(\"Error en el registro.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Usuario\",\n      value: formData.username,\n      onChange: e => setFormData({\n        ...formData,\n        username: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Correo\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: formData.password,\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Registrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"K54Q3z+SnRK6Miqunt8GHzHqOOE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","handleRegister","e","preventDefault","alert","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/Programación_Distribuida/MedicalAppointments/FRONTEND/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { registerUser } from \"../utils/api\";\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({ username: \"\", email: \"\", password: \"\" });\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser(formData); // Usa la función específica\r\n      alert(\"Usuario registrado exitosamente.\");\r\n    } catch (error) {\r\n      alert(\"Error en el registro.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister}>\r\n      <h1>Registro</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Usuario\"\r\n        value={formData.username}\r\n        onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Correo\"\r\n        value={formData.email}\r\n        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Contraseña\"\r\n        value={formData.password}\r\n        onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n        required\r\n      />\r\n      <button type=\"submit\">Registrar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEnF,MAAMC,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMZ,YAAY,CAACK,QAAQ,CAAC,CAAC,CAAC;MAC9BQ,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACEX,OAAA;IAAMa,QAAQ,EAAEL,cAAe;IAAAM,QAAA,gBAC7Bd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAElB,QAAQ,CAACE,QAAS;MACzBiB,QAAQ,EAAGb,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,QAAQ,EAAEI,CAAC,CAACc,MAAM,CAACF;MAAM,CAAC,CAAE;MACxEG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlB,OAAA;MACEmB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAElB,QAAQ,CAACG,KAAM;MACtBgB,QAAQ,EAAGb,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,KAAK,EAAEG,CAAC,CAACc,MAAM,CAACF;MAAM,CAAC,CAAE;MACrEG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlB,OAAA;MACEmB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,eAAY;MACxBC,KAAK,EAAElB,QAAQ,CAACI,QAAS;MACzBe,QAAQ,EAAGb,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEI,QAAQ,EAAEE,CAAC,CAACc,MAAM,CAACF;MAAM,CAAC,CAAE;MACxEG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX,CAAC;AAAChB,EAAA,CAxCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}